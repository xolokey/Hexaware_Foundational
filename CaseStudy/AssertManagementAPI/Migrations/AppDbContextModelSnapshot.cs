// <auto-generated />
using System;
using AssertManagementAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssertManagementAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssertManagementAPI.Model.Assert", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<int>("AssertQuantity")
                        .HasColumnType("int");

                    b.Property<string>("AssetModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AssetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ManufacturingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssetId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Asserts");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.AssertAuditLogs", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<int>("AuditRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VerifiedBy")
                        .HasColumnType("int");

                    b.Property<int?>("VerifiedByNavigationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VerifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LogId");

                    b.HasIndex("AuditRequestId");

                    b.HasIndex("VerifiedByNavigationUserId");

                    b.ToTable("AssertAuditLogs");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.AssetManagementAPI.Models.AssertCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("AssetCategories");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.AssetManagementAPI.Models.ServiceRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<int?>("AssertAssetId")
                        .HasColumnType("int");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("IssueType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ResolvedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("AssertAssetId");

                    b.HasIndex("UserId");

                    b.ToTable("ServiceRequests");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.AuditRequest", b =>
                {
                    b.Property<int>("AuditRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditRequestId"));

                    b.Property<int?>("AssertAssetId")
                        .HasColumnType("int");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AuditRequestId");

                    b.HasIndex("AssertAssetId");

                    b.HasIndex("UserId");

                    b.ToTable("AuditRequests");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.Employee", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.EmployeeAssert", b =>
                {
                    b.Property<int>("AllocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AllocationId"));

                    b.Property<DateTime?>("AllocationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AssertAssetId")
                        .HasColumnType("int");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AllocationId");

                    b.HasIndex("AssertAssetId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeAsserts");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.Assert", b =>
                {
                    b.HasOne("AssertManagementAPI.Model.AssetManagementAPI.Models.AssertCategory", "Category")
                        .WithMany("Assetrs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.AssertAuditLogs", b =>
                {
                    b.HasOne("AssertManagementAPI.Model.AuditRequest", "AuditRequest")
                        .WithMany("AssertAuditLogs")
                        .HasForeignKey("AuditRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssertManagementAPI.Model.Employee", "VerifiedByNavigation")
                        .WithMany()
                        .HasForeignKey("VerifiedByNavigationUserId");

                    b.Navigation("AuditRequest");

                    b.Navigation("VerifiedByNavigation");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.AssetManagementAPI.Models.ServiceRequest", b =>
                {
                    b.HasOne("AssertManagementAPI.Model.Assert", "Assert")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("AssertAssetId");

                    b.HasOne("AssertManagementAPI.Model.Employee", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assert");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.AuditRequest", b =>
                {
                    b.HasOne("AssertManagementAPI.Model.Assert", "Assert")
                        .WithMany("AuditRequests")
                        .HasForeignKey("AssertAssetId");

                    b.HasOne("AssertManagementAPI.Model.Employee", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assert");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.EmployeeAssert", b =>
                {
                    b.HasOne("AssertManagementAPI.Model.Assert", "Assert")
                        .WithMany("EmployeeRequests")
                        .HasForeignKey("AssertAssetId");

                    b.HasOne("AssertManagementAPI.Model.Employee", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assert");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.Assert", b =>
                {
                    b.Navigation("AuditRequests");

                    b.Navigation("EmployeeRequests");

                    b.Navigation("ServiceRequests");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.AssetManagementAPI.Models.AssertCategory", b =>
                {
                    b.Navigation("Assetrs");
                });

            modelBuilder.Entity("AssertManagementAPI.Model.AuditRequest", b =>
                {
                    b.Navigation("AssertAuditLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
